name: docker-image

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

permissions:
  packages: write
  pull-requests: write

jobs:
  build-image-with-buildah:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Build with buildah
        run: buildah bud .

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        if: github.event_name == 'pull_request_target'
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: Check if should publish to docker.io
        id: docker_io_publish
        run: |
          echo "enabled=${{ secrets.DOCKERHUB_USERNAME != '' && github.event_name != 'pull_request' }}" >> ${GITHUB_OUTPUT}
      -
        name: Setup publish tags and versions
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/vagrant-libvirt,enable=true
            name=${{ secrets.DOCKERHUB_ORGANIZATION }}/vagrant-libvirt,enable=${{ steps.docker_io_publish.outputs.enabled }}
          tags: |
            # nightly
            type=schedule
            # tag events
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{version}},value=latest
            # push to master
            type=edge,branch=${{ github.event.repository.default_branch }}
            type=sha,enable={{is_default_branch}}
            # pull requests
            type=ref,event=pr
      -
        name: Setup publish tags and versions
        id: meta-slim
        uses: docker/metadata-action@v4
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/vagrant-libvirt,enable=true
            name=${{ secrets.DOCKERHUB_ORGANIZATION }}/vagrant-libvirt,enable=${{ steps.docker_io_publish.outputs.enabled }}
          tags: |
            # nightly
            type=schedule
            # tag events
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{version}},value=latest
            # push to master
            type=edge,branch=${{ github.event.repository.default_branch }}
            type=sha,enable={{is_default_branch}}
            # pull requests
            type=ref,event=pr
          flavor: |
            suffix=slim-
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:master
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Login to DockerHub
        if: steps.docker_io_publish.outputs.enable == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push main image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          target: final
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      -
        name: Build and push slim image
        id: docker_build_slim
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta-slim.outputs.tags }}
          target: slim
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      -
        name: Image digest Slim
        run: echo ${{ steps.docker_build_slim.outputs.digest }}
      -
        name: Comment on label required for docs preview deploy
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          header: docker-image-tag
          message: |-
            A docker image containing the code from this plugin to allow testing locally without installing
            can be pulled from: ${{ fromJSON(steps.docker_build_slim.outputs.metadata)['image.name'] }}

            If you need the image with the full dev toolchain, you can instead pull: ${{ fromJSON(steps.docker_build.outputs.metadata)['image.name'] }}
